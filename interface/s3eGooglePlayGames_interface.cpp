/*
 * WARNING: this is an autogenerated file and will be overwritten by
 * the extension interface script.
 */

#include "s3eExt.h"
#include "IwDebug.h"
#include "s3eDevice.h"


#include "s3eGooglePlayGames.h"


// For MIPs (and WP8) platform we do not have asm code for stack switching 
// implemented. So we make LoaderCallStart call manually to set GlobalLock
#if defined __mips || defined S3E_ANDROID_X86 || (defined(WINAPI_FAMILY) && (WINAPI_FAMILY == WINAPI_FAMILY_PHONE_APP))
#define LOADER_CALL
#endif

/**
 * Definitions for functions types passed to/from s3eExt interface
 */
typedef  s3eResult(*s3eGPGInitialize_t)();
typedef       void(*s3eGPGDeInitialize_t)();
typedef       void(*s3eGPGRegisterCallback_t)(s3eGPGCallbackType callbackID, s3eCallback callbackFn, void* userData);
typedef       void(*s3eGPGUnRegisterCallback_t)(s3eGPGCallbackType callbackID, s3eCallback callbackFn);
typedef       void(*s3eGPGUnlockAchievement_t)(const char* id);
typedef       void(*s3eGPGUnlockIncrementalAchievement_t)(const char* id, int increment);
typedef       void(*s3eGPGShowAchievementsUI_t)();
typedef       void(*s3eGPGSubmitLeaderboardScore_t)(const char* leaderboardID, int score);
typedef       void(*s3eGPGShowLeaderboardUI_t)(const char* leaderboardID);
typedef       bool(*s3eGPGIsSignedIn_t)();
typedef       void(*s3eGPGShowAllLeaderBoardsUI_t)();

/**
 * struct that gets filled in by s3eGooglePlayGamesRegister
 */
typedef struct s3eGooglePlayGamesFuncs
{
    s3eGPGInitialize_t m_s3eGPGInitialize;
    s3eGPGDeInitialize_t m_s3eGPGDeInitialize;
    s3eGPGRegisterCallback_t m_s3eGPGRegisterCallback;
    s3eGPGUnRegisterCallback_t m_s3eGPGUnRegisterCallback;
    s3eGPGUnlockAchievement_t m_s3eGPGUnlockAchievement;
    s3eGPGUnlockIncrementalAchievement_t m_s3eGPGUnlockIncrementalAchievement;
    s3eGPGShowAchievementsUI_t m_s3eGPGShowAchievementsUI;
    s3eGPGSubmitLeaderboardScore_t m_s3eGPGSubmitLeaderboardScore;
    s3eGPGShowLeaderboardUI_t m_s3eGPGShowLeaderboardUI;
    s3eGPGIsSignedIn_t m_s3eGPGIsSignedIn;
    s3eGPGShowAllLeaderBoardsUI_t m_s3eGPGShowAllLeaderBoardsUI;
} s3eGooglePlayGamesFuncs;

static s3eGooglePlayGamesFuncs g_Ext;
static bool g_GotExt = false;
static bool g_TriedExt = false;
static bool g_TriedNoMsgExt = false;

static bool _extLoad()
{
    if (!g_GotExt && !g_TriedExt)
    {
        s3eResult res = s3eExtGetHash(0xadbd9350, &g_Ext, sizeof(g_Ext));
        if (res == S3E_RESULT_SUCCESS)
            g_GotExt = true;
        else
            s3eDebugAssertShow(S3E_MESSAGE_CONTINUE_STOP_IGNORE,                 "error loading extension: s3eGooglePlayGames");
            
        g_TriedExt = true;
        g_TriedNoMsgExt = true;
    }

    return g_GotExt;
}

static bool _extLoadNoMsg()
{
    if (!g_GotExt && !g_TriedNoMsgExt)
    {
        s3eResult res = s3eExtGetHash(0xadbd9350, &g_Ext, sizeof(g_Ext));
        if (res == S3E_RESULT_SUCCESS)
            g_GotExt = true;
        g_TriedNoMsgExt = true;
        if (g_TriedExt)
            g_TriedExt = true;
    }

    return g_GotExt;
}

s3eBool s3eGooglePlayGamesAvailable()
{
    _extLoadNoMsg();
    return g_GotExt ? S3E_TRUE : S3E_FALSE;
}

s3eResult s3eGPGInitialize()
{
    IwTrace(GOOGLEPLAYGAMES_VERBOSE, ("calling s3eGooglePlayGames[0] func: s3eGPGInitialize"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    s3eResult ret = g_Ext.m_s3eGPGInitialize();

#ifdef LOADER_CALL
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

void s3eGPGDeInitialize()
{
    IwTrace(GOOGLEPLAYGAMES_VERBOSE, ("calling s3eGooglePlayGames[1] func: s3eGPGDeInitialize"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_s3eGPGDeInitialize();

#ifdef LOADER_CALL
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void s3eGPGRegisterCallback(s3eGPGCallbackType callbackID, s3eCallback callbackFn, void* userData)
{
    IwTrace(GOOGLEPLAYGAMES_VERBOSE, ("calling s3eGooglePlayGames[2] func: s3eGPGRegisterCallback"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_s3eGPGRegisterCallback(callbackID, callbackFn, userData);

#ifdef LOADER_CALL
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void s3eGPGUnRegisterCallback(s3eGPGCallbackType callbackID, s3eCallback callbackFn)
{
    IwTrace(GOOGLEPLAYGAMES_VERBOSE, ("calling s3eGooglePlayGames[3] func: s3eGPGUnRegisterCallback"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_s3eGPGUnRegisterCallback(callbackID, callbackFn);

#ifdef LOADER_CALL
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void s3eGPGUnlockAchievement(const char* id)
{
    IwTrace(GOOGLEPLAYGAMES_VERBOSE, ("calling s3eGooglePlayGames[4] func: s3eGPGUnlockAchievement"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_s3eGPGUnlockAchievement(id);

#ifdef LOADER_CALL
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void s3eGPGUnlockIncrementalAchievement(const char* id, int increment)
{
    IwTrace(GOOGLEPLAYGAMES_VERBOSE, ("calling s3eGooglePlayGames[5] func: s3eGPGUnlockIncrementalAchievement"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_s3eGPGUnlockIncrementalAchievement(id, increment);

#ifdef LOADER_CALL
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void s3eGPGShowAchievementsUI()
{
    IwTrace(GOOGLEPLAYGAMES_VERBOSE, ("calling s3eGooglePlayGames[6] func: s3eGPGShowAchievementsUI"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_s3eGPGShowAchievementsUI();

#ifdef LOADER_CALL
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void s3eGPGSubmitLeaderboardScore(const char* leaderboardID, int score)
{
    IwTrace(GOOGLEPLAYGAMES_VERBOSE, ("calling s3eGooglePlayGames[7] func: s3eGPGSubmitLeaderboardScore"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_s3eGPGSubmitLeaderboardScore(leaderboardID, score);

#ifdef LOADER_CALL
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void s3eGPGShowLeaderboardUI(const char* leaderboardID)
{
    IwTrace(GOOGLEPLAYGAMES_VERBOSE, ("calling s3eGooglePlayGames[8] func: s3eGPGShowLeaderboardUI"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_s3eGPGShowLeaderboardUI(leaderboardID);

#ifdef LOADER_CALL
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

bool s3eGPGIsSignedIn()
{
    IwTrace(GOOGLEPLAYGAMES_VERBOSE, ("calling s3eGooglePlayGames[9] func: s3eGPGIsSignedIn"));

    if (!_extLoad())
        return 0;

#ifdef LOADER_CALL
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    bool ret = g_Ext.m_s3eGPGIsSignedIn();

#ifdef LOADER_CALL
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

void s3eGPGShowAllLeaderBoardsUI()
{
    IwTrace(GOOGLEPLAYGAMES_VERBOSE, ("calling s3eGooglePlayGames[10] func: s3eGPGShowAllLeaderBoardsUI"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_s3eGPGShowAllLeaderBoardsUI();

#ifdef LOADER_CALL
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}
